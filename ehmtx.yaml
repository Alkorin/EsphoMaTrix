substitutions:
  devicename: ehmtx

external_components:
  - source:
      type: git
      url: https://github.com/lubeda/EsphoMaTrix

esphome:
  name: $devicename
  on_boot:
    lambda: |
       App.register_component(rgb8x32);

font:
  - file: monobit.ttf
    id: ehmtx_font
    size: 16
    glyphs:  |
      !"%()+*=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz€@<>

esp8266:
  board: d1_mini

# Enable logging
logger:
  level: INFO

# Enable Home Assistant API
api:
  services:
    - service: alarm
      variables:
        icon: int
        text: string
      then:
        lambda: |-
          id(rgb8x32)->add_alarm(icon,text);
    - service: screen_n
      variables:
        icon_name: string
        text: string
      then:
        lambda: |-
          id(rgb8x32)->add_screen_n(icon_name,text);
    - service: screen
      variables:
        icon: int
        text: string
      then:
        lambda: |-
          id(rgb8x32)->add_screen(icon,text);
    - service: screen_t
      variables:
        icon: int
        duration: int
        text: string
      then:
        lambda: |-
          id(rgb8x32)->add_screen_t(icon,text,duration);
    - service: status
      then:
        lambda: |-
          id(rgb8x32)->get_status();
    - service: del_screen
      variables:
        icon: int
      then:
        lambda: |-
          id(rgb8x32)->del_screen(icon);
    - service: indicator_on
      variables:
        r: int
        g: int
        b: int
      then:
        lambda: |-
          id(rgb8x32)->set_indicatorcolor(r,g,b);
          id(rgb8x32)->set_indicatoron();
    - service: textcolor
      variables:
        r: int
        g: int
        b: int
      then:
        lambda: |-
          id(rgb8x32)->set_textcolor(r,g,b);
    - service: alarmcolor
      variables:
        r: int
        g: int
        b: int
      then:
        lambda: |-
          id(rgb8x32)->set_alarmcolor(r,g,b);
    
    - service: indicator_off
      then:
        lambda: |-
          id(rgb8x32)->set_indicatoroff();

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "EsphoMaTriX"
    password: "InM2TlqVfJe4"

captive_portal:

light:
  - platform: neopixelbus
    id: ehmtx_light
    type: GRB
    variant: WS2812
    pin: GPIO04
    color_correct: [30%, 30%, 30%]
    num_leds: 256
    name: "$devicename Light"
    restore_mode: ALWAYS_OFF
    on_turn_on:
      lambda: |-
         id(ehmtx_display)->set_enabled(false);
    on_turn_off:
       lambda: |-
         id(ehmtx_display)->set_enabled(true);

time:
  - platform: homeassistant
    id: ehmtx_time

display:
  - platform: addressable_light
    id: ehmtx_display
    addressable_light_id: ehmtx_light
    width: 32
    height: 8
    pixel_mapper: |-
      if (x % 2 == 0) {
        return (x * 8) + y;
      }
      return (x * 8) + (7 - y);
    rotation: 0°
    update_interval: 16ms
    auto_clear_enabled: true
    lambda: |-
      id(rgb8x32)->tick();
      id(rgb8x32)->draw();

ehmtx:
  id: rgb8x32
  showclock: 4
  showscreen: 6
  display8x32: ehmtx_display
  time: ehmtx_time
  duration: 7
  font_id: ehmtx_font
  icons: 
    - file: _icons/test.jpg
      id: jpeg
    - file: sample.png
      id: sample 
    - file: _icons/TAKE OFF.gif
      id: boot 
    - file: _icons/Temperature.png
      id: temp 
    - file: _icons/Garage Door.gif
      id: garage
    - file: _icons/Wind.gif
      id: wind
    - file: _icons/Rain.gif
      id: rain
    - file: _icons/dog.png
      id: dog
    - file: _icons/girl.gif
      id: girl
    - file: _icons/shop.gif
      id: shop
